// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Reclaimer.Entities
{
    using Adjutant.Blam.Common;

    // tag_item
    [Table("tag_item", Schema = "main")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class TagItem
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"cache_id", Order = 0, TypeName = "integer")]
        [Required]
        [Key]
        [Display(Name = "Cache ID")]
        public long CacheId { get; set; } // cache_id (Primary key)
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"tag_id", Order = 1, TypeName = "integer")]
        [Required]
        [Key]
        [Display(Name = "Tag ID")]
        public long TagId { get; set; } // tag_id (Primary key)

        [Column(@"meta_pointer", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Meta pointer")]
        public int MetaPointer { get; set; } // meta_pointer

        [Column(@"path_id", Order = 3, TypeName = "integer")]
        [Required]
        [Display(Name = "Path ID")]
        public long PathId { get; set; } // path_id

        [Column(@"class_code", Order = 4, TypeName = "varchar")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Class code")]
        public string ClassCode { get; set; } // class_code (length: 4)

        // Foreign keys

        /// <summary>
        /// Parent TagIndex pointed by [tag_item].([CacheId]) (fk_tag_item_1)
        /// </summary>
        [ForeignKey("CacheId"), Required] public virtual TagIndex TagIndex { get; set; } // fk_tag_item_1

        /// <summary>
        /// Parent TagPath pointed by [tag_item].([PathId]) (fk_tag_item_0)
        /// </summary>
        [ForeignKey("PathId"), Required] public virtual TagPath TagPath { get; set; } // fk_tag_item_0

        public TagItem()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
