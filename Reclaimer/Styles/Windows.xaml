<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/WindowButtonCommands.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MainWindowButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,0,0,7" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Height" Value="26" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

        <!--inactive-->
        <Setter Property="Foreground" Value="{DynamicResource Environment.MainWindow.ButtonInactiveGlyph}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ButtonInactiveBorder}" />

        <Style.Triggers>
            <!--active-->
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.MainWindow.ButtonActiveGlyph}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ButtonActiveBorder}" />
            </DataTrigger>

            <!--active, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.MainWindow.ButtonHoverActiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.MainWindow.ButtonHoverActive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ButtonHoverActiveBorder}" />
            </MultiDataTrigger>

            <!--inactive, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.MainWindow.ButtonHoverInactiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.MainWindow.ButtonHoverInactive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ButtonHoverInactiveBorder}" />
            </MultiDataTrigger>

            <!--pressed-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.MainWindow.ButtonDownGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.MainWindow.ButtonDown}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ButtonDownBorder}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainWindowMaxButtonStyle" TargetType="Button" BasedOn="{StaticResource MainWindowButtonStyle}">
        <Setter Property="Padding" Value="0,0,0,6" />
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="metro:MetroWindow">
        <Style.Resources>
            <Style TargetType="metro:WindowButtonCommands" BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Base}">
                <Setter Property="LightMinButtonStyle" Value="{StaticResource MainWindowButtonStyle}" />
                <Setter Property="LightMaxButtonStyle" Value="{StaticResource MainWindowMaxButtonStyle}" />
                <Setter Property="LightCloseButtonStyle" Value="{StaticResource MainWindowButtonStyle}" />
                <Setter Property="DarkMinButtonStyle" Value="{StaticResource MainWindowButtonStyle}" />
                <Setter Property="DarkMaxButtonStyle" Value="{StaticResource MainWindowMaxButtonStyle}" />
                <Setter Property="DarkCloseButtonStyle" Value="{StaticResource MainWindowButtonStyle}" />
            </Style>
        </Style.Resources>
        
        <Setter Property="WindowTitleBrush" Value="{DynamicResource Environment.MainWindow.ActiveCaptionBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />
        <!--<Setter Property="GlowBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />-->

        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource Environment.MainWindow.InactiveCaptionBackground}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />
        <!--<Setter Property="NonActiveGlowBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />-->

        <Setter Property="Background" Value="{DynamicResource Environment.EnvironmentBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="TitleBarHeight" Value="31" />
        <Setter Property="TitleForeground" Value="{DynamicResource Environment.MainWindow.InactiveCaptionForeground}" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />

        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="TitleForeground" Value="{DynamicResource Environment.MainWindow.ActiveCaptionForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RaftedWindowButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,0,0,7" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Height" Value="26" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

        <!--inactive-->
        <Setter Property="Foreground" Value="{DynamicResource Environment.RaftedWindow.ButtonInactiveGlyph}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.RaftedWindow.ButtonInactiveBorder}" />

        <Style.Triggers>
            <!--active-->
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.RaftedWindow.ButtonActiveGlyph}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.RaftedWindow.ButtonActiveBorder}" />
            </DataTrigger>

            <!--active, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverActiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverActive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverActiveBorder}" />
            </MultiDataTrigger>

            <!--inactive, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverInactiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverInactive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.RaftedWindow.ButtonHoverInactiveBorder}" />
            </MultiDataTrigger>

            <!--pressed-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.RaftedWindow.ButtonDownGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.RaftedWindow.ButtonDown}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.RaftedWindow.ButtonDownBorder}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RaftedWindowMaxButtonStyle" TargetType="Button" BasedOn="{StaticResource RaftedWindowButtonStyle}">
        <Setter Property="Padding" Value="0,0,0,6" />
    </Style>

    <Style x:Key="RaftedWindowStyle" TargetType="metro:MetroWindow">
        <Style.Resources>
            <Style TargetType="metro:WindowButtonCommands" BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Base}">
                <Setter Property="LightMinButtonStyle" Value="{StaticResource RaftedWindowButtonStyle}" />
                <Setter Property="LightMaxButtonStyle" Value="{StaticResource RaftedWindowMaxButtonStyle}" />
                <Setter Property="LightCloseButtonStyle" Value="{StaticResource RaftedWindowButtonStyle}" />
                <Setter Property="DarkMinButtonStyle" Value="{StaticResource RaftedWindowButtonStyle}" />
                <Setter Property="DarkMaxButtonStyle" Value="{StaticResource RaftedWindowMaxButtonStyle}" />
                <Setter Property="DarkCloseButtonStyle" Value="{StaticResource RaftedWindowButtonStyle}" />
            </Style>
        </Style.Resources>
        
        <Setter Property="WindowTitleBrush" Value="{DynamicResource Environment.ToolWindow.FloatingFrameBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />
        <!--<Setter Property="GlowBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />-->

        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource Environment.ToolWindow.FloatingFrameInactiveBackground}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />
        <!--<Setter Property="NonActiveGlowBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />-->

        <Setter Property="Background" Value="{DynamicResource Environment.EnvironmentBackgroundGradient}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="TitleBarHeight" Value="29" />
        <Setter Property="TitleForeground" Value="{DynamicResource Environment.ToolWindow.FloatingFrameInactiveForeground}" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />

        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="TitleForeground" Value="{DynamicResource Environment.ToolWindow.FloatingFrameForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolWindowMaxButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

        <!--inactive-->
        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonInactiveGlyph}" />

        <Style.Triggers>
            <!--active-->
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonActiveGlyph}" />
            </DataTrigger>

            <!--active, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActiveBorder}" />
            </MultiDataTrigger>

            <!--active, pressed-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True" />
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonDownActiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonDown}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonDownBorder}" />
            </MultiDataTrigger>

            <!--inactive, hovered-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactive}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactiveBorder}" />
            </MultiDataTrigger>

            <!--inactive, pressed-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False" />
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonDownInactiveGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonDown}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonDownBorder}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolWindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource ToolWindowMaxButtonStyle}">
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="2,2,0,0" />
        <Setter Property="Margin" Value="0,0,3,0" />
    </Style>

    <Style x:Key="ToolWindowStyle" TargetType="metro:MetroWindow">
        <Style.Resources>
            <Style TargetType="metro:WindowButtonCommands" BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Base}">
                <Setter Property="LightMaxButtonStyle" Value="{StaticResource ToolWindowMaxButtonStyle}" />
                <Setter Property="LightCloseButtonStyle" Value="{StaticResource ToolWindowCloseButtonStyle}" />
                <Setter Property="DarkMaxButtonStyle" Value="{StaticResource ToolWindowMaxButtonStyle}" />
                <Setter Property="DarkCloseButtonStyle" Value="{StaticResource ToolWindowCloseButtonStyle}" />
            </Style>
        </Style.Resources>
        
        <Setter Property="Background" Value="{DynamicResource Environment.EnvironmentBackground}" />

        <Setter Property="WindowTitleBrush" Value="{DynamicResource Environment.TitleBar.ActiveGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />
        <!--<Setter Property="GlowBrush" Value="{DynamicResource Environment.MainWindow.ActiveDefaultBorder}" />-->

        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource Environment.TitleBar.InactiveGradient}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />
        <!--<Setter Property="NonActiveGlowBrush" Value="{DynamicResource Environment.MainWindow.InactiveBorder}" />-->

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="TitleBarHeight" Value="21" />
        <Setter Property="TitleForeground" Value="{DynamicResource Environment.TitleBar.InactiveText}" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />

        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ShowMinButton" Value="False" />

        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="TitleForeground" Value="{DynamicResource Environment.TitleBar.ActiveText}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>